PROBLEM SOLVING PATTERNS

  FREQUENCY COUNTERS
    - this patterns uses objects or sets to collect
      values/frequencies of values

    - this can often avoid the need for nested loops
      or O(N^2) operations with arrays/strings

  MULTIPLE POINTERS
    - creating pointers or values that correspond
      to an index or position and move towards
      the beginning, end or middle based on a
      certain conditioin

    - very efficient for solving problems
      with minimal space complexity as well

  SLIDING WINDOW
    - this pattern involves creating a window which can
      either be an array or number from one position
      to another

    - depending on a certain condition, the window either
      increases or closes (and a new window is created)

    - very useful for keeping track of a subset of
      data in an array/string etc

  DIVIDE AND CONQUER
    - this pattern involves dividing a data set
      into smaller chunks and then repeating a
      process with a subset of data

    - this pattern can tremendously decrease
      time complexity