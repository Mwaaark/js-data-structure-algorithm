DYNAMIC PROGRAMMING (A LIGHT INTRODUCTION)
  a method for solving a complex problem by breaking
  it down into a collection of simpler subproblems,
  solving each of thoses subproblems just once,
  and store their solutions

  using past knowledge to make solving a future problem
  easier

  It only works on problems with "Optimal Substructure"
  & "Overlapping Subproblems"

    OVERLAPPING SUBPROBLEMS
      a problem is said to have overlapping subproblems if
      it can be broken down into subproblems which are reused
      several times

      e.g.
        FIBONACCI SEQUENCE
          every number after the first two is the sum of
          the two preceding ones

    OPTIMAL SUBSTRUCTURE
      a problem is said to have optimal substructure if an
      optimal solution can be constructed from optimal
      solutions of its subproblems

  MEMOIZATION (TOP-DOWN)
    storing the results of expensive function calls and
    returning the cached result when the same inputs occur
    again

  TABULATION (BOTTOM-UP)
    storing the result of a previous result in a table
    (usually an array)

    usually done with iteration

    better space complexity can be achieved using tabulation